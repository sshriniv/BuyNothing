
<!-- The 'Relpy' link calls the new_comment_comment_path rotue. This route calls the 'new' action on the comments controller and passing in the comment_id(parent) in the params hash. However, the 'remote: true' option causes the request to be submitted via ajax. This expects a javascript response. Hence the new controller action responds with 'new.js.erb' instead of the default html response - 'new.html.erb'. The new.js.erb modifies the DOM to dynamically attach the 'new_comment_comment' partial.-->
<ul>
  <div class="comment" id= "comment-<%=comment.id%>" >
 
    <%# Initialize the reply_id css id that is used in the link_to 'Reply' section%>	
    <%reply_id = 'reply-link-comment-'+comment.id.to_s%>

    <div class = "row">
      <div class="col-md-1">
        <%=image_tag comment.user.avatar.url(:original), size: "100x10",:class => "img-responsive" %>
      </div>
    
      <div class="col-xs-10">
        <b><%= link_to comment.user.username,users_show_path(:id=>comment.user.id) %></b>
        <div class = "posted_at"><%= comment.posted_at%></div></br>
        <%= comment.body %>
        <%= link_to 'Reply', new_comment_comment_path(comment), class: 'reply_link', id:reply_id, remote: true %><br><br>
      </div>
    </div>
  

  

    <ul class="comments-list" id = "comment-<%=comment.id%>-comments-list">
      <% unless comment.comments.empty? %>
          <%= render :partial => 'comments/comment', :collection => comment.comments %>
      <% end %>
    </ul>

  </div>
</ul>